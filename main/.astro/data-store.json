[["Map",1,2,9,10,61,62],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.1.9","content-config-digest","96b8bf5d7a24a5bc","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://miranext.net/\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":false,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true},\"redirects\":{},\"prefetch\":true,\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[\"webmention.io\"],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":false,\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[null,null,null],\"rehypePlugins\":[[null,{\"rel\":[\"nofollow, noreferrer\"],\"target\":\"_blank\"}],null,[null,{\"styleOverrides\":{\"borderRadius\":\"4px\",\"codeFontFamily\":\"ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace;\",\"codeFontSize\":\"0.775rem\",\"codeLineHeight\":\"1.7142857rem\",\"codePaddingInline\":\"1rem\",\"frames\":{\"frameBoxShadowCssValue\":\"none\"},\"uiLineHeight\":\"inherit\"},\"themes\":[\"dracula\",\"github-light\"],\"useThemedScrollbars\":false}]],\"remarkRehype\":{\"footnoteLabelProperties\":{\"className\":[\"\"]}},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{\"WEBMENTION_API_KEY\":{\"context\":\"server\",\"access\":\"secret\",\"optional\":true,\"type\":\"string\"},\"WEBMENTION_URL\":{\"context\":\"client\",\"access\":\"public\",\"optional\":true,\"type\":\"string\"},\"WEBMENTION_PINGBACK\":{\"context\":\"client\",\"access\":\"public\",\"optional\":true,\"type\":\"string\"}},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false},\"legacy\":{\"collections\":false}}","post",["Map",11,12,25,26,35,36],"scheduler",{"id":11,"data":13,"body":21,"filePath":22,"digest":23,"deferredRender":24},{"title":14,"description":15,"draft":16,"tags":17,"publishDate":19,"updatedDate":20},"Scheduler","Build Non Blocking UI's via the Scheduler API",false,[18,11],"javascript",["Date","2025-01-10T16:00:00.000Z"],["Date","2025-01-10T16:00:00.000Z"],"import SchedulerDemo from '../../components/SchedulerDemo.astro';\n\n## Scheduler\n\nI've recently became aware of the new Scheduler API. The cool thing about this api is that it enables a long running loop to yield.\nAs you know in javascript, if you call a function, the ui will not be able to refresh or respond to user input until that function is fully done.\nFrontend apps by default should always be responsive to user input/requests and should not freeze.\n\nBelow is a demo of scheduler.yield(). Use your arrow keys to move the highlighted box. You should notice that your key navigation request is still\nworking while the long for loop is going on as well.\n\n\u003CSchedulerDemo />\n\n## References\n\n1. https://developer.mozilla.org/en-US/docs/Web/API/Scheduler\n2. https://github.com/astoilkov/main-thread-scheduling\n\n## Source\n\n```javascript\n\n const ELEMENTS = 1000;\n  const ITER = Number.MAX_SAFE_INTEGER;\n  const INTERACTION_COLS = 20\n  const INTERACTION_ROWS = 6\n  const root = document.getElementById('demoroot')\n  const interRoot = document.getElementById('interroot')\n\n  let activeRow = 0\n  let activeCol = 0\n\n  let lastActiveRow = -1\n  let lastActiveCol = -1\n\n  for (let i=0; i \u003C INTERACTION_ROWS; i++) {\n    const row = document.createElement('div')\n    row.setAttribute('class', 'flex')\n    interRoot?.appendChild(row)\n    for (let j=0; j \u003C INTERACTION_COLS; j++) {\n      const cell = document.createElement('div')\n      cell.setAttribute('class', 'w-6 h-6 border border-slate-100')\n      cell.setAttribute('id', `cell-${i}-${j}`)\n      row.appendChild(cell)\n    }\n  }\n\n  function highlightActive(row: number, col: number, prevRow: number, prevCol: number) {\n    const cell = document.getElementById(`cell-${row}-${col}`) as HTMLDivElement\n    if (cell) {\n      cell.style.background = 'pink'\n    }\n\n    const lastActiveCell = document.getElementById(`cell-${prevRow}-${prevCol}`) as HTMLDivElement\n\n    if (lastActiveCell && lastActiveCell !== cell) {\n      lastActiveCell.style.background = 'transparent'\n    }\n  }\n  highlightActive(activeRow, activeCol, lastActiveRow, lastActiveCol)\n  lastActiveCol = activeCol\n  lastActiveRow = activeRow\n  document.addEventListener('keydown', (e) => {\n    e.preventDefault()\n    if (e.code === 'ArrowDown' && activeRow + 1 \u003C INTERACTION_ROWS) {\n      lastActiveRow = activeRow\n      lastActiveCol = activeCol\n      activeRow += 1\n    }\n    if (e.code === 'ArrowRight' && activeCol + 1 \u003C INTERACTION_COLS) {\n      lastActiveCol = activeCol\n      lastActiveRow = activeRow\n      activeCol += 1\n    }\n\n    if (e.code === 'ArrowUp' && activeRow - 1 > -1) {\n      lastActiveRow = activeRow\n      lastActiveCol = activeCol\n      activeRow -= 1\n    }\n    if (e.code === 'ArrowLeft' && activeCol - 1 > -1) {\n      lastActiveRow = activeRow\n      lastActiveCol = activeCol\n      activeCol -= 1\n    }\n    highlightActive(activeRow, activeCol, lastActiveRow, lastActiveCol)\n  })\n\n  if (root) {\n    const colors = [];\n    for (let i = 0; i \u003C ELEMENTS; i++) {\n      await (window as any)                                                                                             .yield();\n      const color = `${Math.floor(Math.random() * 16777215)\n        .toString(16)\n        .padStart(6, '0')}`;\n      colors.push(color);\n    }\n    for (let j = 0; j \u003C ITER; j++) {\n      for (let i = 0; i \u003C colors.length; i++) {\n        await (window as any).scheduler.yield();\n        const id = colors[i];\n        let el = document.getElementById(id);\n        if (el) {\n          el.style.background = `#${Math.floor(Math.random() * 16777215)\n            .toString(16)\n            .padStart(6, '0')}`;\n        } else {\n          el = document.createElement('div');\n          el.style.width = '10px';\n          el.style.height = '10px';\n          el.style.background = `#${id}`;\n          el.setAttribute('id', id);\n          root.appendChild(el);\n        }\n      }\n    }\n  }\n\n\n```","src/content/post/scheduler.mdx","352ffbf2afa4fa73",true,"rendering/fast_websocket_updates_with_scheduler",{"id":25,"data":27,"body":32,"filePath":33,"digest":34,"deferredRender":24},{"title":28,"description":29,"draft":24,"tags":30,"publishDate":31},"Rendering Fast Websocket Updates with Scheduler","Using the Scheduler API to render fast websocket updates without freezing the UI.",[18,11],["Date","2025-01-24T16:00:00.000Z"],"## Introduction\n\nLets say we need to subscribe to a ticker and then render the price as we receive it in realtime.\nImplementation should be straightforward as shown below:\n\n```tsx\n// might not compile\nconst SYMBOL = 'BNBUSDT';\nconst App = () => {\n\n  const [price, setPrice] = useState(0);\n\n  useEffect(() => {\n    const ws = new WebSocket(`wss://stream.binance.com:9443/ws/${symbol}@ticker`);\n    ws.onopen = function() {\n      if (wss) {\n          wss.send(\n            JSON.stringify({\n              method: \"SUBSCRIBE\",\n              params: [\"!ticker@arr\"],\n              id: id++\n            })\n          );\n        }\n    }\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      setPrice(data.price)\n    }\n  }, [])\n\n  return (\n    \u003Cdiv className=\"flex items-center\">\n     \u003Ch1>{SYMBOL}\u003C/h1>\n      \u003Cdiv>\n        {price}\n      \u003C/div>\n    \u003C/div>\n  )\n```","src/content/post/rendering/fast_websocket_updates_with_scheduler.mdx","eca887e317b8278b","first_blog_post",{"id":35,"data":37,"body":42,"filePath":43,"digest":44,"rendered":45},{"title":38,"description":38,"draft":16,"tags":39,"publishDate":41},"Starting Again.",[40],"musings",["Date","2024-12-31T16:00:00.000Z"],"Another try on consistently publishing my thoughts or what I'm mostly busy with.\n\n```ts title=\"willcodeforfood.ts\" showLineNumbers {1-2,5-7}\n\n  async function willCodeForFood() {\n    await ...\n  }\n\n```","src/content/post/first_blog_post.md","609b52447cac07bd",{"html":46,"metadata":47},"\u003Cp>Another try on consistently publishing my thoughts or what I’m mostly busy with.\u003C/p>\n\u003Cdiv class=\"expressive-code\">\u003Clink rel=\"stylesheet\" href=\"/_astro/ec.gvxfn.css\">\u003Cscript type=\"module\" src=\"/_astro/ec.8zarh.js\">\u003C/script>\u003Cfigure class=\"frame has-title\">\u003Cfigcaption class=\"header\">\u003Cspan class=\"title\">willcodeforfood.ts\u003C/span>\u003C/figcaption>\u003Cpre data-language=\"ts\">\u003Ccode>\u003Cdiv class=\"ec-line highlight mark\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">  \u003C/span>\u003Cspan style=\"--0:#ff92d1;--1:#982934\">async\u003C/span>\u003Cspan style=\"--0:#F8F8F2;--1:#24292E\"> \u003C/span>\u003Cspan style=\"--0:#ff92d1;--1:#982934\">function\u003C/span>\u003Cspan style=\"--0:#F8F8F2;--1:#24292E\"> \u003C/span>\u003Cspan style=\"--0:#50FA7B;--1:#613aa9\">willCodeForFood\u003C/span>\u003Cspan style=\"--0:#F8F8F2;--1:#24292E\">() {\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line highlight mark\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">    \u003C/span>\u003Cspan style=\"--0:#ff92d1;--1:#982934\">await\u003C/span>\u003Cspan style=\"--0:#F8F8F2;--1:#24292E\"> \u003C/span>\u003Cspan style=\"--0:#ff92d1;--1:#982934\">...\u003C/span>\u003C/div>\u003C/div>\u003Cdiv class=\"ec-line\">\u003Cdiv class=\"code\">\u003Cspan class=\"indent\">\u003Cspan style=\"--0:#F8F8F2;--1:#24292E\">  \u003C/span>\u003C/span>\u003Cspan style=\"--0:#F8F8F2;--1:#24292E\">}\u003C/span>\u003C/div>\u003C/div>\u003C/code>\u003C/pre>\u003Cdiv class=\"copy\">\u003Cbutton title=\"Copy to clipboard\" data-copied=\"Copied!\" data-code=\"  async function willCodeForFood() {    await ...  }\">\u003Cdiv>\u003C/div>\u003C/button>\u003C/div>\u003C/figure>\u003C/div>",{"headings":48,"imagePaths":49,"frontmatter":50},[],[],{"layout":51,"title":38,"publishDate":52,"description":38,"author":53,"excerpt":54,"image":55,"tags":57,"status":59,"readingTime":60},"../../layouts/post.astro","01 January 2025","Warren Mira","New Year Another Try.",{"src":56,"alt":56},null,[58],"Musings","published","1 min read","note",["Map",63,64],"welcome",{"id":63,"data":65,"body":69,"filePath":70,"digest":71,"rendered":72},{"title":66,"description":67,"publishDate":68},"Hello, Welcome","An introduction to using the note feature in Astro Cactus",["Date","2024-10-14T11:23:00.000Z"],"Hi, Hello. This is an example note feature included with Astro Cactus.\n\nThey're for shorter, concise \"post's\" that you'd like to share, they generally don't include headings, but hey, that's entirely up to you.","src/content/note/welcome.md","11dddc222071745f",{"html":73,"metadata":74},"\u003Cp>Hi, Hello. This is an example note feature included with Astro Cactus.\u003C/p>\n\u003Cp>They’re for shorter, concise “post’s” that you’d like to share, they generally don’t include headings, but hey, that’s entirely up to you.\u003C/p>",{"headings":75,"imagePaths":76,"frontmatter":77},[],[],{"title":66,"description":67,"publishDate":78,"readingTime":60},"2024-10-14T11:23:00Z"]